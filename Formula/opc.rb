# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Opc < Formula
  desc "A CLI for OpenShift Pipeline"
  homepage "https://github.com/openshift-pipelines/opc"
  version "1.19.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.19.0/opc_1.19.0_darwin_x86_64.tar.gz"
      sha256 "1475cf8400a1aca8cc42135f5fd7e78edd442c15bbde02b2b7fdd292a93a8377"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.19.0/opc_1.19.0_darwin_arm64.tar.gz"
      sha256 "9ec3f52b8a3fa3c51324cc7f3c59c4b8eb6acbc8a090b64563c4643799c21434"

      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.19.0/opc_1.19.0_linux_x86_64.tar.gz"
      sha256 "e71e5611034301486d07a82c69943443d693144d39482c07a15658698609403e"
      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/openshift-pipelines/opc/releases/download/v1.19.0/opc_1.19.0_linux_arm64.tar.gz"
      sha256 "a7d708fd4da532577e0df2ca2874d9e5ce863acf0cb9410c9c909ae6b1217752"
      def install
        bin.install "opc" => "opc"
        output = Utils.popen_read("SHELL=bash #{bin}/opc completion bash")
        (bash_completion/"opc").write output
        output = Utils.popen_read("SHELL=zsh #{bin}/opc completion zsh")
        (zsh_completion/"_opc").write output
        prefix.install_metafiles
      end
    end
  end
end
